---
- name: Get Web Console route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: openshift-console
    name: console
  register: r_console_route

- name: Get API server URL
  k8s_info:
    api_version: config.openshift.io/v1
    kind: Infrastructure
    name: cluster
  register: r_api_url

# ARGOCD
- name: Get the ArgoCD console route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: openshift-gitops-server
    namespace: openshift-gitops
  register: r_argocd_console_route

- name: Get the ArgoCD admin password
  k8s_info:
    api_version: v1
    kind: Secret
    name: openshift-gitops-cluster
    namespace: openshift-gitops
  register: r_argocd_admin_password  

- name: Set fact for ArgoCD route
  set_fact:
    argocd_route: "{{ r_argocd_console_route | json_query(route_query) }}"
  vars:
  - route_query: resources[].spec.host|[0]

- name: Set fact for ArgoCD admin passwd
  set_fact:
    argocd_passwd: "{{ r_argocd_admin_password | json_query(secret_query) | b64decode }}"
  vars:
  - secret_query: resources[].data."admin.password"|[0]

# ACM
- name: Get the ACM route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: multicloud-console
    namespace: open-cluster-management
  register: r_acm_console_route

- name: Set fact for ACM route
  set_fact:
    acm_route: "{{ r_acm_console_route | json_query(route_query) }}"
  vars:
  - route_query: resources[].spec.host|[0]

# ACS
- name: Get the ACS console route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: central
    namespace: stackrox
  register: r_acs_console_route

- name: Get the ACS admin password
  k8s_info:
    api_version: v1
    kind: Secret
    name: central-htpasswd
    namespace: stackrox
  register: r_acs_admin_password  

- name: Set fact for ACS route
  set_fact:
    acs_route: "{{ r_acs_console_route | json_query(route_query) }}"
  vars:
  - route_query: resources[].spec.host|[0]

- name: Set fact for ACS admin passwd
  set_fact:
    acs_passwd: "{{ r_acs_admin_password | json_query(secret_query) | b64decode }}"
  vars:
  - secret_query: resources[].data.password|[0]

# QUAY
- name: Get the QUAY console route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: quay-registry-quay
    namespace: openshift-operators
  register: r_quay_console_route

- name: Set fact for Quay route
  set_fact:
    quay_route: "{{ r_quay_console_route | json_query(route_query) }}"
  vars:
  - route_query: resources[].spec.host|[0]

- name: Print user info
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
  - ""
  - "Your AWS credentials are:"
  - ""
  - "AWS_ACCESS_KEY_ID: {{ hostvars.localhost.student_access_key_id }}"
  - "AWS_SECRET_ACCESS_KEY: {{ hostvars.localhost.student_secret_access_key }}"
  - "** Plase be very careful to not expose AWS credentials in GIT repos or anywhere else that could be public! **"
  - ""
  - "Top level route53 domain: {{ subdomain_base_suffix }}"
  - "The default region is set to {{ aws_region }}"
  - ""
  - >-
    {% if sandbox_enable_ui | default(true) | bool %}
    Web Console Access: https://{{ sandbox_account_id }}.signin.aws.amazon.com/console
    {% endif %}
  - >-
    {% if sandbox_enable_ui | default(true) | bool %}
    Web Console Credentials: {{ student_console_user_name }} / {{ student_console_password }}
    {% endif %}
  - ""
  - "Visit the following pages to learn how to use the CLI and APIs:"
  - ""
  - "AWS CLI Installation: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"
  - "AWS Config Basics: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"
  - "AWS API Getting Started: https://aws.amazon.com/developers/getting-started/"
  - "Getting Started Tips - https://learning.redhat.com/course/view.php?id=2751"
  - ""
  - "****************************WARNING**WARNING**WARNING****************************"
  - "** We monitor usage and we will be charging back to your cost center.          **"
  - "** Reports from the cloud provider of misuse or account compromise will result **"
  - "** in immediate deletion of this entire account without any warning to you.    **"
  - "** Do not post your credentials in github/email/web pages/etc.                 **"
  - "** NOTE: Most account compromises occur by checking credentials into github.   **"
  - "****************************WARNING**WARNING**WARNING****************************"
  - ""
  - "Your ArgoCD console is available at:"
  - "https://{{ argocd_route }}"
  - "The ArgoCD's admin password is: {{ argocd_passwd }}"
  - ""
  - "Your ACM console is available at:"
  - "https://{{ acm_route }}"
  - ""
  - "Your ACS central is available at:"
  - "https://{{ acs_route }}"  
  - "The ACS' central admin password is: {{ acs_passwd }}"  
  - ""
  - "Your Quay console is available at:"
  - "https://{{ quay_route }}"    
  - "" 

- name: Save user data
  agnosticd_user_info:
    data:
      web_console_url: "https://{{ r_console_route.resources[0].spec.host }}"
      api_url: "{{ r_api_url.resources[0].status.apiServerURL }}"
      argocd_url: "https://{{ r_argocd_console_route.resources[0].spec.host }}"
      argocd_adminpasswd: "{{ argocd_passwd }}"
      acm_url: "https://{{ acm_route }}"
      acs_url: "https://{{ acs_route }}"
      acs_adminpasswd: "{{ acs_passwd }}"
      quay_url: "https://{{ quay_route }}"      

- name: Write out AWS credentials if deployed to EC2 sandbox
  when:
  - cloud_provider == 'ec2'
  - hostvars.localhost.cloudformation_out_final.stack_outputs.StudentUserAccessKey is defined
  - hostvars.localhost.cloudformation_out_final.stack_outputs.StudentUserSecretAccessKey is defined
  include_tasks: aws_credentials.yml

# Leave this as the last task in the playbook.
- name: post_workload tasks complete
  debug:
    msg: "Post-Workload Tasks completed successfully."
  when: not silent|bool
